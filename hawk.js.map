{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///hawk.js","webpack:///webpack/bootstrap adc57b13449e8c01c413","webpack:///./src/modules/logger.js","webpack:///./src/modules/hawk.js","webpack:///./src/config.js","webpack:///./src/main.js","webpack:///./src/modules/websocket.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","log","message","type","window","console","config","websocket","logger","ws","token","init","token_","host","port","path","secure","socket","undefined","onmessage","socketHandlers","onclose","close","addEventListener","errorHandler","data","JSON","parse","e","ErrorEvent","error","error_location","file","filename","line","lineno","col","colno","location","url","href","origin","hostname","pathname","stack","stacktrace","time","Date","now","navigator","userAgent","send","test","options","STATES","CONNECTING","OPEN","CLOSING","CLOSED","Promise","resolve","reject","protocol","WebSocket","onopen","reconnect","attempts","arguments","length","then","catch","stringify","readyState"],"mappings":"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","file":"hawk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hawk\"] = factory();\n\telse\n\t\troot[\"hawk\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hawk\"] = factory();\n\telse\n\t\troot[\"hawk\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Logger module\n *\n * @usage\n * logger.log('We got an error', 'error')\n *\n * @param message\n * @param type - log type: error, warn, info, log, etc.\n */\nmodule.exports.log = function (message, type) {\n\n    type = type || 'info';\n\n    message = '[Codex Hawk]:  ' + message;\n\n    if ('console' in window && window.console[type]) {\n\n        window.console[type](message);\n    }\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*!\n * Codex Hawk client side module\n * https://github.com/codex-team/hawk.client\n *\n * Codex Hawk - https://hawk.so\n * Codex Team - https://ifmo.su\n *\n * MIT License | (c) Codex 2017\n */\nmodule.exports = function () {\n\n    'use strict';\n\n    var config = __webpack_require__(2),\n        websocket = __webpack_require__(4),\n        logger = __webpack_require__(0),\n        ws = null,\n        token = void 0;\n\n    /**\n     * Hawk client constructor\n     * @param  {string} token_      personal token\n     * @param  {string} host        optional: client catcher hostname\n     * @param  {Number} port        optional: client catcher port\n     * @param  {string} path        hawk catcher route\n     * @param  {Boolean} secure     pass FALSE to disable secure connection\n     */\n    var init = function init(token_, host, port, path, secure) {\n\n        config.socket.host = host || config.socket.host;\n        config.socket.port = port || config.socket.port;\n        config.socket.path = path || config.socket.path;\n        config.socket.secure = secure !== undefined ? secure : config.socket.secure;\n\n        if (!token_) {\n\n            logger.log('Please, pass your verification token for Hawk error tracker. You can get it on hawk.so', 'warn');\n            return;\n        }\n\n        token = token_;\n\n        var socket = config.socket;\n\n        socket.onmessage = socketHandlers.message;\n        socket.onclose = socketHandlers.close;\n\n        ws = websocket(socket);\n\n        window.addEventListener('error', errorHandler);\n    };\n\n    var socketHandlers = {\n\n        message: function message(data) {\n\n            var message = void 0,\n                type = void 0;\n\n            try {\n\n                data = JSON.parse(data.data);\n                type = data.type;\n                message = data.message;\n            } catch (e) {\n\n                message = data.data;\n                type = 'info';\n            }\n\n            logger.log('Message from server: ' + message, type);\n        },\n\n        close: function close() {\n\n            logger.log('Connection lost. Errors won\\'t be save. Please, refresh the page', 'warn');\n        }\n\n    };\n\n    /**\n     * Error event handler.\n     * Get error params and send to Hawk server\n     *\n     * @param ErrorEvent\n     */\n    var errorHandler = function errorHandler(ErrorEvent) {\n\n        var error = {\n            token: token,\n            message: ErrorEvent.message,\n            error_location: {\n                file: ErrorEvent.filename,\n                line: ErrorEvent.lineno,\n                col: ErrorEvent.colno\n            },\n            location: {\n                url: window.location.href,\n                origin: window.location.origin,\n                host: window.location.hostname,\n                path: window.location.pathname,\n                port: window.location.port\n            },\n            stack: ErrorEvent.error.stack || ErrorEvent.error.stacktrace,\n            time: Date.now(),\n            navigator: window.navigator.userAgent\n        };\n\n        ws.send(error);\n    };\n\n    var test = function test() {\n\n        var fakeEvent = {\n            message: 'Hawk client catcher test',\n            filename: 'hawk.js',\n            lineno: 0,\n            colno: 0,\n            error: {\n                stack: 'hawk.js'\n            }\n        };\n\n        errorHandler(fakeEvent);\n    };\n\n    return {\n        init: init,\n        test: test\n    };\n}();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n\n    socket: {\n        host: 'hawk.so',\n        path: 'catcher/client',\n        port: 8070,\n        secure: true\n    }\n\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(1);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Native websocket module\n * Open new websocket connection using native WebSocket object\n *\n * @usage\n * var ws = new websocket({\n *  host: 'localhost',\n *  path: 'socket',\n *  port: 80000,\n *  onmessage: messageHandler\n * })\n *\n * @param {Object} options\n *\n * Server properties\n * @param {String} options.host - WebSocket server host\n * @param {String} options.path - WebSocket server path\n * @param {Number} options.port - WebSocket server port\n * @param {Boolean} options.secure - if True, uses wss protocol, else ws\n *\n * Events handlers\n * @param {Function} options.onopen - fires when connection have been opened\n * @param {Function} options.onmessage - fires when message from server received\n * @param {Function} options.onclose - fires when connection have been closed\n *\n * @returns {{send: send}}\n */\nmodule.exports = function (options) {\n\n    var ws = null,\n        logger = __webpack_require__(0);\n\n    var STATES = {\n        CONNECTING: 0,\n        OPEN: 1,\n        CLOSING: 2,\n        CLOSED: 3\n    };\n\n    /**\n    * Open new websocket connection\n    * Returns promise, resolved if connection was opened and rejected on error\n    *\n    * @returns {Promise}\n    */\n    var init = function init() {\n\n        return new Promise(function (resolve, reject) {\n\n            var protocol = 'ws' + (options.secure ? 's' : '') + '://',\n                host = options.host || 'localhost',\n                path = options.path ? '/' + options.path : '',\n                port = options.port ? ':' + options.port : '',\n                url = protocol + host + port + path;\n\n            ws = new WebSocket(url);\n\n            if (typeof options.onmessage === 'function') {\n\n                ws.onmessage = options.onmessage;\n            }\n\n            ws.onclose = function (e) {\n\n                if (typeof options.onclose === 'function') {\n\n                    options.onclose.call(this, e);\n                }\n\n                reject();\n            };\n\n            ws.onopen = function (e) {\n\n                if (typeof options.onopen === 'function') {\n\n                    options.onopen.call(this, e);\n                }\n\n                resolve();\n            };\n        });\n    };\n\n    /**\n    * Try to open new websocket connection.\n    * Returns promise, resolved if reconnect was successful, rejected otherwise\n    *\n    * @param attempts - number of reconnect attempts. 1 by default\n    * @returns {Promise}\n    */\n    var reconnect = function reconnect() {\n        var attempts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n\n        return new Promise(function (resolve, reject) {\n\n            init().then(function () {\n\n                logger.log('Successfully reconnect to socket server', 'info');\n                resolve();\n            }, function () {\n\n                if (attempts > 0) {\n\n                    reconnect(attempts - 1).then(resolve, reject);\n                } else {\n\n                    logger.log('Can\\'t reconnect to socket server', 'warn');\n                    reject();\n                }\n            }).catch(function (e) {\n\n                logger.log('Error while reconnecting to socket server', 'error');\n            });\n        });\n    };\n\n    /**\n    * Send data to WebSocket server in JSON format\n    * @param data\n    */\n    var send = function send(data) {\n\n        if (ws === null) {\n\n            return;\n        }\n\n        data = JSON.stringify(data);\n\n        if (ws.readyState !== STATES.OPEN) {\n\n            reconnect().then(function () {\n\n                ws.send(data);\n            }, function () {\n\n                logger.log('Can\\'t send your data', 'warn');\n            });\n        } else {\n\n            ws.send(data);\n        }\n    };\n\n    init().catch(function (e) {\n\n        logger.log('Error while opening socket connection', 'error');\n    });\n\n    return {\n        send: send\n    };\n};\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// hawk.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap adc57b13449e8c01c413","/**\n * Logger module\n *\n * @usage\n * logger.log('We got an error', 'error')\n *\n * @param message\n * @param type - log type: error, warn, info, log, etc.\n */\nmodule.exports.log = function (message, type) {\n\n    type = type || 'info';\n\n    message = '[Codex Hawk]:  ' + message;\n\n    if ('console' in window && window.console[type]) {\n\n        window.console[type](message);\n\n    }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/logger.js","/*!\n * Codex Hawk client side module\n * https://github.com/codex-team/hawk.client\n *\n * Codex Hawk - https://hawk.so\n * Codex Team - https://ifmo.su\n *\n * MIT License | (c) Codex 2017\n */\nmodule.exports = function () {\n\n    'use strict';\n\n    let config = require('../config'),\n        websocket = require('./websocket'),\n        logger = require('./logger'),\n        ws = null,\n        token;\n\n    /**\n     * Hawk client constructor\n     * @param  {string} token_      personal token\n     * @param  {string} host        optional: client catcher hostname\n     * @param  {Number} port        optional: client catcher port\n     * @param  {string} path        hawk catcher route\n     * @param  {Boolean} secure     pass FALSE to disable secure connection\n     */\n    let init = function (token_, host, port, path, secure) {\n\n        config.socket.host = host || config.socket.host;\n        config.socket.port = port || config.socket.port;\n        config.socket.path = path || config.socket.path;\n        config.socket.secure = secure !== undefined ? secure : config.socket.secure;\n\n        if (!token_) {\n\n            logger.log('Please, pass your verification token for Hawk error tracker. You can get it on hawk.so', 'warn');\n            return;\n\n        }\n\n        token = token_;\n\n        let socket = config.socket;\n\n        socket.onmessage = socketHandlers.message;\n        socket.onclose = socketHandlers.close;\n\n        ws = websocket(socket);\n\n        window.addEventListener('error', errorHandler);\n\n    };\n\n    let socketHandlers = {\n\n        message: function (data) {\n\n            let message, type;\n\n            try {\n\n                data = JSON.parse(data.data);\n                type = data.type;\n                message = data.message;\n\n            } catch (e) {\n\n                message = data.data;\n                type = 'info';\n\n            }\n\n            logger.log('Message from server: ' + message, type);\n\n        },\n\n        close: function () {\n\n            logger.log('Connection lost. Errors won\\'t be save. Please, refresh the page', 'warn');\n\n        }\n\n    };\n\n    /**\n     * Error event handler.\n     * Get error params and send to Hawk server\n     *\n     * @param ErrorEvent\n     */\n    let errorHandler = function (ErrorEvent) {\n\n        let error = {\n            token: token,\n            message: ErrorEvent.message,\n            error_location: {\n                file: ErrorEvent.filename,\n                line: ErrorEvent.lineno,\n                col: ErrorEvent.colno\n            },\n            location: {\n                url: window.location.href,\n                origin: window.location.origin,\n                host: window.location.hostname,\n                path: window.location.pathname,\n                port: window.location.port\n            },\n            stack: ErrorEvent.error.stack || ErrorEvent.error.stacktrace,\n            time: Date.now(),\n            navigator: window.navigator.userAgent\n        };\n\n        ws.send(error);\n\n    };\n\n    let test = function () {\n\n        let fakeEvent = {\n            message: 'Hawk client catcher test',\n            filename: 'hawk.js',\n            lineno: 0,\n            colno: 0,\n            error: {\n                stack: 'hawk.js'\n            }\n        };\n\n        errorHandler(fakeEvent);\n\n    };\n\n    return {\n        init: init,\n        test: test\n    };\n\n}();\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/hawk.js","module.exports = {\n\n    socket: {\n        host: 'hawk.so',\n        path: 'catcher/client',\n        port: 8070,\n        secure: true\n    }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/config.js","module.exports = require('./modules/hawk');\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","/**\n * Native websocket module\n * Open new websocket connection using native WebSocket object\n *\n * @usage\n * var ws = new websocket({\n *  host: 'localhost',\n *  path: 'socket',\n *  port: 80000,\n *  onmessage: messageHandler\n * })\n *\n * @param {Object} options\n *\n * Server properties\n * @param {String} options.host - WebSocket server host\n * @param {String} options.path - WebSocket server path\n * @param {Number} options.port - WebSocket server port\n * @param {Boolean} options.secure - if True, uses wss protocol, else ws\n *\n * Events handlers\n * @param {Function} options.onopen - fires when connection have been opened\n * @param {Function} options.onmessage - fires when message from server received\n * @param {Function} options.onclose - fires when connection have been closed\n *\n * @returns {{send: send}}\n */\nmodule.exports = function (options) {\n\n    let ws = null,\n        logger = require('./logger');\n\n    const STATES = {\n        CONNECTING: 0,\n        OPEN: 1,\n        CLOSING: 2,\n        CLOSED: 3\n    };\n\n    /**\n   * Open new websocket connection\n   * Returns promise, resolved if connection was opened and rejected on error\n   *\n   * @returns {Promise}\n   */\n    let init = function () {\n\n        return new Promise(function (resolve, reject) {\n\n            let protocol = 'ws' + (options.secure ? 's' : '') + '://',\n                host = options.host || 'localhost',\n                path = options.path ? '/' + options.path : '',\n                port = options.port ? ':' + options.port : '',\n                url = protocol + host + port + path;\n\n            ws = new WebSocket(url);\n\n            if (typeof options.onmessage === 'function') {\n\n                ws.onmessage = options.onmessage;\n\n            }\n\n            ws.onclose = function (e) {\n\n                if (typeof options.onclose === 'function') {\n\n                    options.onclose.call(this, e);\n\n                }\n\n                reject();\n\n            };\n\n            ws.onopen = function (e) {\n\n                if (typeof options.onopen === 'function') {\n\n                    options.onopen.call(this, e);\n\n                }\n\n                resolve();\n\n            };\n\n        });\n\n    };\n\n    /**\n   * Try to open new websocket connection.\n   * Returns promise, resolved if reconnect was successful, rejected otherwise\n   *\n   * @param attempts - number of reconnect attempts. 1 by default\n   * @returns {Promise}\n   */\n    let reconnect = function (attempts=1) {\n\n        return new Promise(function (resolve, reject) {\n\n            init()\n                .then(function () {\n\n                    logger.log('Successfully reconnect to socket server', 'info');\n                    resolve();\n\n                },\n                function () {\n\n                    if (attempts > 0) {\n\n                        reconnect(attempts - 1)\n                            .then(resolve, reject);\n\n                    } else {\n\n                        logger.log('Can\\'t reconnect to socket server', 'warn');\n                        reject();\n\n                    }\n\n                })\n                .catch(function (e) {\n\n                    logger.log('Error while reconnecting to socket server', 'error');\n\n                });\n\n        });\n\n\n    };\n\n    /**\n   * Send data to WebSocket server in JSON format\n   * @param data\n   */\n    let send = function (data) {\n\n        if (ws === null) {\n\n            return;\n\n        }\n\n        data = JSON.stringify(data);\n\n        if (ws.readyState !== STATES.OPEN) {\n\n            reconnect()\n                .then(function () {\n\n                    ws.send(data);\n\n                },\n                function () {\n\n                    logger.log('Can\\'t send your data', 'warn');\n\n                });\n\n        } else {\n\n            ws.send(data);\n\n        }\n\n    };\n\n    init()\n        .catch(function (e) {\n\n            logger.log('Error while opening socket connection', 'error');\n\n        });\n\n    return {\n        send: send,\n    };\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/websocket.js"],"sourceRoot":""}